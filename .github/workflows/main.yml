name: 🚥 CI/CD Pipeline
on: push

permissions:
  contents: write

jobs:
  tests:
    name: 👀 Evaluate on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    # Only release when pushing a tag
    if: github.ref_type == 'tag'
    strategy:
      # Don't cancel other OS runners if one fails.
      fail-fast: false
      matrix:
        # Put the operating systems you want to run on here.
        os: [windows-latest]
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_NOLOGO: true
    defaults:
      run:
        # Use bash shells on all platforms.
        shell: bash
    steps:
      - uses: actions/checkout@v3
        name: 🧾 Checkout

      - uses: actions/setup-dotnet@v3
        name: 💽 Setup .NET SDK
        with:
          # Use the .NET SDK from global.json in the root of the repository.
          global-json-file: global.json

      - name: 📦 Restore Dependencies
        run: dotnet restore

      - uses: chickensoft-games/setup-godot@v1
        name: 🤖 Setup Godot
        with:
          # Version must include major, minor, and patch, and be >= 4.0.0
          # Pre-release label is optional.
          version: 4.4.1 # also valid: 4.0.0.rc1 or 4.0.0, etc
          # Use .NET-enabled version of Godot (the default is also true).
          use-dotnet: true
          # Include the Godot Export Templates (the default is false).
          include-templates: true

      - name: 🔬 Verify Setup
        run: |
          dotnet --version
          godot --version

      - name: 🧑‍🔬 Generate .NET Bindings
        run: godot --headless --build-solutions --quit || exit 0

      - name: 🦺 Build Projects
        run: dotnet build


      # 🏗 Export Game
      - name: 🏗 Export Game
        run: |
          mkdir -p export/release export/debug

          VERSION_TAG="${GITHUB_REF_NAME}"

          # Export builds
          godot --export-release "Windows Desktop" export/release/Phalanx_${VERSION_TAG}.exe
          godot --export-debug "Windows Desktop" export/debug/Phalanx_Debug_${VERSION_TAG}.exe

          # Zip only the debug build
          cd export/debug

          if [[ "$RUNNER_OS" == "Windows" ]]; then
            echo "Running on Windows - using PowerShell Compress-Archive"
            pwsh -Command "Compress-Archive -Path Phalanx_Debug_${VERSION_TAG}.exe -DestinationPath ../Phalanx_Debug_${VERSION_TAG}.zip"
          else
            echo "Running on Linux - using zip"
            zip ../Phalanx_Debug_${VERSION_TAG}.zip Phalanx_Debug_${VERSION_TAG}.exe
          fi

          cd ../../

          # Cleanup: remove the now-unneeded debug folder
          rm -rf export/debug

      # 📦 Upload export artifacts
      - name: 📦 Upload Exported Builds
        uses: actions/upload-artifact@v4
        with:
          name: game-exports-${{ matrix.os }}
          path: export/

  release:
    name: 🚀 Release
    needs: tests
    runs-on: ubuntu-latest
    # Only release when pushing a tag
    if: github.ref_type == 'tag'
    steps:
      - uses: actions/checkout@v3
        name: 🧾 Checkout

      - name: 📥 Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: releases

      - name: 📦 Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: releases/**/*
